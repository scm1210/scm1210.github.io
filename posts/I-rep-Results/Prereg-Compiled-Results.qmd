---
title: "I representation: Combiled Results"
author: "Steven"
date: "`r Sys.Date()`"
format: 
  revealjs:
    css: styles.css
    center: true  
    scrollable: true
    smaller: true
    slide-number: true   
    fig-width: 10
    fig-height: 7
---

```{r load packages and installize conda environment, include=FALSE}
if (!require("pacman")) install.packages("pacman") #run this if you don't have pacman 
library(pacman)
pacman::p_load(tidyverse,DT,lmerTest,
               lme4,reactable,
               broom.mixed,knitr,
               kableExtra,ggrepel,
               install = T) 

good_palette <- c(
  "#772e25", "#c44536", "#ee9b00", "#197278", "#283d3b", 
  "#9CC5A1", "#6195C6", "#ADA7C9", "#4D4861", "grey50",
  "#d4a373", "#8a5a44", "#4a6a74", "#5c80a8", "#a9c5a0",
  "#7b9b8e", "#e1b16a", "#a69b7c", "#9d94c4", "#665c54"
)

palette_condition = c("#ee9b00", "#c44536","#005f73", "#283d3b", "#9CC5A1", "#6195C6", "#ADA7C9", "#4D4861")
plot_aes = theme_minimal() +
  theme(legend.position = "none",
        legend.text = element_text(size = 12),
        text = element_text(size = 16, family = "Futura Medium"),
        axis.text = element_text(color = "black"),
        axis.ticks.y = element_blank())

```

```{r helper functions}
table_model <- function(model, reference = "Intercept", dv_name = "dependent_variable") {
  # Extract the tidy data from the model directly
  model_data <- tidy(model, conf.int = TRUE)
  
  # Process the model data
  model_table <- model_data %>%
    filter(effect == "fixed") %>%
    rename("SE" = std.error,
           "t" = statistic,
           "p" = p.value) %>%
    select(-group, -effect) %>%
    mutate(across(where(is.numeric), ~round(., 5))) %>%
    mutate(
      term = gsub("\\(Intercept\\)", !!reference, term),
      term = gsub(":", " x ", term),
      term = gsub("ethnicity", "", term),
      p_original = p,
      p = ifelse(p < .001, "< .001",
                 ifelse(p == 1, "1.000", gsub("0.(.*)", ".\\1", sprintf("%.3f", p)))),
      `b [95% CI]` = sprintf("%.4f [%0.4f, %.4f]", estimate, conf.low, conf.high),  # Changed estimate to 4 decimal places
      significance = case_when(
        p_original < 0.001 ~ "***",
        p_original < 0.01 ~ "**",
        p_original < 0.05 ~ "*",
        p_original < 0.10 ~ "+",
        TRUE ~ ""
      )
    ) %>%
    select(term, `b [95% CI]`, df, SE, t, p, significance)

  # Create a datatable for displaying results
  dt_table <- datatable(
    model_table,
    caption = htmltools::tags$caption(
      style = 'caption-side: top; text-align: center; color: black; font-size: 20px; font-weight: bold;',
      paste('Linear Mixed Model Results for', dv_name)  # Dynamic DV in caption
    ),
    options = list(
      pageLength = 20,
      dom = 't',
      columnDefs = list(list(className = 'dt-center', targets = 1:5))
    ),
    rownames = FALSE
  ) %>%
    formatStyle(
      'term',
      fontWeight = 'bold'
    ) %>%
    formatStyle(
      'p',
      color = styleInterval(c(0.001, 0.01, 0.05), c('darkred', 'red', 'orange', 'black'))
    )

  return(dt_table)
}


extract_lmer_data <- function(model) {
  # Ensure the broom.mixed package is available
  if (!requireNamespace("broom.mixed", quietly = TRUE)) {
    stop("Please install the 'broom.mixed' package to use this function.")
  }
  
  # Extract fixed effects with 95% confidence intervals
  fixed_effects <- broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE)
  
  # Add the 'outcome' column with the value "Internalizing"
  fixed_effects <- fixed_effects %>%
    dplyr::mutate(outcome = "Internalizing")
  
  return(fixed_effects)
}

```

```{r load-good-bad-data}
df = read.csv('/Users/sm9518/Downloads/Talkspace_MADS_exp.csv')

df = df |> 
  #dplyr::rename(room_id = 1) |> #rename the first column to the room_id
  filter(bin < 5) # filter out anyone with bin great than 4

good_bad_data_small <- df |> 
  mutate(
    i_MADS = i_good - i_bad,
    Internalizing = GAD + PHQ
  ) |> 
  filter(
  !is.na(daysSinceFirstText) & 
  daysSinceFirstText >= 7 & # at least 1 week of texts
  n_total >= 25 & # greater than 25 words needed to be included 
  !is.na(i_MADS) & 
  n_i > 0 &  # needs to have i in the text 
  (n_good > 0 | n_bad > 0) # needs to have EITHER a single occurrence of good or bad 
) 

#### create disaggregated data 
between <- good_bad_data_small %>%
  gather(item, value,i_MADS,n_i,n_good,n_bad,pct_i,pct_good,pct_bad,n_total,tone_pos,tone_neg,emo_pos,emo_neg) %>%
  select(user_id, item, value) %>%
  unique() %>%
  group_by(user_id, item) %>%
  summarize(mean = mean(value, na.rm = TRUE)) %>%
  mutate(item = sprintf("%s_between", item)) %>%
  group_by(item) %>%
  mutate(mean = scale(mean, center = TRUE, scale = TRUE)) %>%
  spread(item, mean)

# Within-person variation
within <- good_bad_data_small %>%
  gather(item, value, i_MADS,n_i,n_good,n_bad,pct_i,pct_good,pct_bad,n_total,tone_pos,tone_neg,emo_pos,emo_neg) %>%
  group_by(user_id, item) %>%
  mutate(value = scale(value, center = TRUE, scale = TRUE),
         item = sprintf("%s_within", item)) %>%
  spread(item, value)

# Combine both within-person and between-person variation
disaggregated_good_bad <- within |> 
  left_join(between, by = "user_id") |> 
  select(1:10,12,daysSinceFirstText,Internalizing,i_MADS_within,i_MADS_between,n_i_within,n_i_between,n_good_within,n_good_between,n_bad_within,n_bad_between, pct_i_between,pct_i_within,pct_good_between,pct_good_within,pct_bad_between,pct_bad_within,n_total_within,n_total_between,tone_pos_within,tone_pos_between,tone_neg_within,tone_neg_between,emo_pos_within,emo_pos_between,emo_neg_within,emo_neg_between) 


### data plot 

data_plot_good = good_bad_data_small |> 
  select(bin,daysSinceFirstText, user_id,i_MADS,n_i,n_good,n_bad,pct_i,pct_good,pct_bad,tone_pos,tone_neg,emo_pos,emo_neg) |> 
  pivot_longer(cols = i_MADS, names_to = "word_attribute", values_to = "distance") 

data_sx_good = good_bad_data_small |> 
  select(bin,daysSinceFirstText, user_id, PHQ, GAD,Internalizing) |> 
  pivot_longer(cols = PHQ:Internalizing, names_to = "Scale", values_to = "Scores") 

# Scale all the variables
good_bad_data_small <- good_bad_data_small|> 
  mutate(
    daysSinceFirstText = scale(daysSinceFirstText),
    Internalizing = scale(Internalizing),
    n_i = scale(n_i),
    n_good = scale(n_good),
    n_bad = scale(n_bad),
    i_MADS = scale(i_MADS),
    pct_i = scale(pct_i),
    pct_good = scale(pct_good),
    pct_bad = scale(pct_bad),
    n_total = scale(n_total),
    tone_pos = scale(tone_pos),
    tone_neg = scale(tone_neg),
    emo_pos = scale(emo_pos),
    emo_neg = scale(emo_neg)
  )

disaggregated_good_bad$Internalizing <- scale(disaggregated_good_bad$Internalizing)
disaggregated_good_bad$daysSinceFirstText <- scale(disaggregated_good_bad$daysSinceFirstText)

```

```{r load-able-unable-data}
able_unable_data_small <- df |> 
  mutate(
    i_MADS = i_able - i_unable,
    Internalizing = GAD + PHQ
  ) |> 
  filter(
  !is.na(daysSinceFirstText) & 
  daysSinceFirstText >= 7 & # at least 1 week of texts &
  n_total >= 25 & 
  !is.na(i_MADS) & 
  n_i > 0 & 
  (n_able> 0 | n_unable > 0)
) 

#### create disaggregated data 
between <- able_unable_data_small %>%
  gather(item, value,i_MADS,pct_i,pct_able,pct_unable,emo_pos,emo_neg,tone_pos,tone_neg,n_total) %>%
  select(user_id, item, value) %>%
  unique() %>%
  group_by(user_id, item) %>%
  summarize(mean = mean(value, na.rm = TRUE)) %>%
  mutate(item = sprintf("%s_between", item)) %>%
  group_by(item) %>%
  mutate(mean = scale(mean, center = TRUE, scale = TRUE)) %>%
  spread(item, mean)

# Within-person variation
within <- able_unable_data_small %>%
  gather(item, value, i_MADS,pct_i,pct_able,pct_unable,emo_pos,emo_neg,tone_pos,tone_neg,n_total) %>%
  group_by(user_id, item) %>%
  mutate(value = scale(value, center = TRUE, scale = TRUE),
         item = sprintf("%s_within", item)) %>%
  spread(item, value)

# Combine both within-person and between-person variation
disaggregated_able_unable <- within |> 
  left_join(between, by = "user_id") |> 
  select(1:10,12,daysSinceFirstText,
         Internalizing,i_MADS_within,i_MADS_between,
         n_total_within,n_total_between,
         pct_i_within,pct_i_between,pct_able_within,pct_able_between,
         pct_unable_within,pct_unable_between,
         emo_pos_within,emo_pos_between,
         emo_neg_within,emo_neg_between,
         tone_pos_within,tone_pos_between,
         tone_neg_within,tone_neg_between) 


### data plot 

data_plot_able = able_unable_data_small |> 
  select(bin,daysSinceFirstText, user_id,i_MADS) |> 
  pivot_longer(cols = i_MADS, names_to = "word_attribute", values_to = "distance") 

data_sx_able = able_unable_data_small |> 
  select(bin,daysSinceFirstText, user_id, PHQ, GAD,Internalizing) |> 
  pivot_longer(cols = PHQ:Internalizing, names_to = "Scale", values_to = "Scores") 

# Scale all the variables
able_unable_data_small <- able_unable_data_small %>%
  mutate(
    daysSinceFirstText = scale(daysSinceFirstText),
    Internalizing = scale(Internalizing),
    n_i = scale(n_i),
    n_good = scale(n_good),
    n_bad = scale(n_bad),
    i_MADS = scale(i_MADS),
    pct_i = scale(pct_i),
    pct_able = scale(pct_able),
    pct_unable = scale(pct_unable),
    n_total = scale(n_total),
    tone_pos = scale(tone_pos),
    tone_neg = scale(tone_neg),
    emo_pos = scale(emo_pos),
    emo_neg = scale(emo_neg)
  )

disaggregated_able_unable$Internalizing <- scale(disaggregated_able_unable$Internalizing)
disaggregated_able_unable$daysSinceFirstText <- scale(disaggregated_able_unable$daysSinceFirstText)

#### make a new palette to differentiate the analyses

able_palette <- c(
  "#6d645c", "#b3abd5", "#b4a584", "#f1c27d", "#91b4a7",
  "#b5d3b1", "#6e90b2", "#5a7c88", "#9c6b4f", "#ddb892",
  "#7a7a7a", "#5c5470", "#c3b5d7", "#7baedc", "#a8d5ba",
  "#3a4d4b", "#1f5f63", "#f2a541", "#d95c4b", "#6b2f2b"
)
```

# Q1) How does “I” representation change across time

## Good vs Bad {.scrollable}

I moves from bad to good

::: center
```{r}
#| paged-print: false
#| 
i_MADS_change <- lmer(i_MADS ~  daysSinceFirstText + (1|room_id), data = good_bad_data_small)
model_summary <- summary(i_MADS_change)
coeff_estimate <- model_summary$coefficients["daysSinceFirstText", "Estimate"]
p_value <- model_summary$coefficients["daysSinceFirstText", "Pr(>|t|)"]
conf_int <- confint(i_MADS_change, level = 0.95)["daysSinceFirstText", ]

sig_label <- if (p_value < 0.001) {
  "***"
} else if (p_value < 0.01) {
  "**"
} else if (p_value < 0.05) {
  "*"
} else {
  "n.s."  # Not significant
}

# Format text for annotation
annotation_text <- sprintf(
  "\u03B2: %.2f\n95%% CI: [%.2f, %.2f]",
  coeff_estimate, conf_int[1], conf_int[2]
)



data_plot_good |> 
  filter(word_attribute == "i_MADS") |>
  ggplot(aes(x = daysSinceFirstText, y = distance, group = user_id, color = word_attribute)) +
  geom_smooth(aes(group = word_attribute), method = "gam", se = T, size = 1.2) +  # Omnibus trend lines
  scale_color_manual(values = good_palette, name = "") +
  # Additional custom plot aesthetics
  labs(y = "Mean Attribute\nDifference Score", 
       x = "Days in Therapy") + 
  plot_aes +  
  theme_minimal() +
  theme(legend.position = "top") + 
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5),
    text = element_text(size = 16, family= "Futura Medium"),
    plot.caption = element_text(hjust = 0, size = 10, face = "italic")
  ) +
 annotate(
    "text",
    x = max(data_sx_good$daysSinceFirstText, na.rm = TRUE) * 0.75,  # Right side of the x-axis
    y = .021,  # Near the top of the plot
    label = annotation_text,
    color = "black",
    size = 6,  # Text size ~14 pt equivalent in ggplot
    fontface = "bold",
    hjust = 0.5
  )  +
  annotate(
    "text",
    x = mean(data_sx_good$daysSinceFirstText, na.rm = TRUE),  # Center over the x-axis
    y = .021,  # Near the top of the plot
    label = sig_label,  # Dynamically assigned significance stars
    color = "black",
    size = 6,  
    fontface = "bold",
    hjust = 0.5
  ) + 
   annotate("text", x = 5, y = 0.02055, label = "Closer to Good →", hjust = 0, size = 5, fontface = "italic",angle = 90) +
  annotate("text", x =  5, y = 0.01995, label = "← Closer to Bad", hjust = 1, size = 5, fontface = "italic",angle = 90) 
```
:::

## Able vs Unable {.scrollable}

I moves from unable to able

::: center
```{r}
i_MADS_change <- lmer(i_MADS ~  daysSinceFirstText + (1|room_id), data = able_unable_data_small)

model_summary <- summary(i_MADS_change)
coeff_estimate <- model_summary$coefficients["daysSinceFirstText", "Estimate"]
p_value <- model_summary$coefficients["daysSinceFirstText", "Pr(>|t|)"]
conf_int <- confint(i_MADS_change, level = 0.95)["daysSinceFirstText", ]

sig_label <- if (p_value < 0.001) {
  "***"
} else if (p_value < 0.01) {
  "**"
} else if (p_value < 0.05) {
  "*"
} else {
  "n.s."  # Not significant
}

# Format text for annotation
annotation_text <- sprintf(
  "\u03B2: %.2f\n95%% CI: [%.2f, %.2f]",
  coeff_estimate, conf_int[1], conf_int[2]
)

data_plot_able |> 
  filter(word_attribute == "i_MADS") |>
  ggplot(aes(x = daysSinceFirstText, y = distance, group = user_id, color = word_attribute)) +
  geom_smooth(aes(group = word_attribute), method = "gam", se = T, size = 1.2) +  # Omnibus trend lines
  scale_color_manual(values = able_palette, name = "") +
  # Additional custom plot aesthetics
  labs(y = "Mean Attribute\nDifference Score", 
       x = "Days in Therapy") + 
  plot_aes +  
  theme_minimal() +
  theme(legend.position = "top") + 
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5),
    text = element_text(size = 16, family= "Futura Medium"),
    plot.caption = element_text(hjust = 0, size = 10, face = "italic")
  ) +
 annotate(
    "text",
    x = max(data_sx_able$daysSinceFirstText, na.rm = TRUE) * 0.75,  # Right side of the x-axis
    y = .055,  # Near the top of the plot
    label = annotation_text,
    color = "black",
    size = 6,  # Text size ~14 pt equivalent in ggplot
    fontface = "bold",
    hjust = 0.5
  )  +
  annotate(
    "text",
    x = mean(data_sx_able$daysSinceFirstText, na.rm = TRUE),  # Center over the x-axis
    y = .055,  # Near the top of the plot
    label = sig_label,  # Dynamically assigned significance stars
    color = "black",
    size = 6,  
    fontface = "bold",
    hjust = 0.5
  ) + 
   annotate("text", x = 5, y = 0.0525, label = "Closer to Able →", hjust = 0, size = 5, fontface = "italic",angle = 90) +
  annotate("text", x =  5, y = 0.049, label = "← Closer to Unable", hjust = 1, size = 5, fontface = "italic",angle = 90) 

```
:::

# Q2) How does “I” representation along these axes relate to symptoms? {.scrollable}

## Good vs Bad

More “good” representation = less sx (both between- and within-person)

:::: scrollable
::: panel-tabset
### Non-disaggregated

```{r good-bad-nondisagg}

i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + daysSinceFirstText + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
max_y <- length(unique(i_MADS_internalizing$estimate)) - 0.5

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.5, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.4, y = max_y, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = max_y, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```

### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + (1|room_id), data = disaggregated_good_bad) # need to optimize to get it to converge
disagg_model <- extract_lmer_data(i_avg)


max_y <- length(unique(disagg_model$estimate)) -.5


disagg_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.35,0.35)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
    annotate("text", x = -0.3, y = max_y, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = max_y, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

## Able vs Unable

More “able” representation = less sx (both between- and within-person)

:::: scrollable
::: panel-tabset
### Non-disaggregated

```{r able-unable-nondisagg, fig.height=7, fig.width=10}

i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + daysSinceFirstText + (1|room_id), data = able_unable_data_small)

i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.5, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
    annotate("text", x = -0.5, y = 2.5, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 2.5, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 



```

### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + (1|room_id), data = disaggregated_able_unable) # need to optimize to get it to converge
disagg_model <- extract_lmer_data(i_avg)

disagg_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.35,0.35)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
    annotate("text", x = -0.3, y = 3.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 3.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```
:::
::::

# Q3) Are these results attributable to a set of potential confounding variables?

## Good vs Bad

### Word Frequency

No, all results hold when controlling for frequency of "I" and other words

------------------------------------------------------------------------

#### Controlling for Freq. of I

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~ pct_i + i_MADS + daysSinceFirstText + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)


i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.5, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
      annotate("text", x = -0.3, y = 3.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 3.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 



```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge

good_bad_model <- extract_lmer_data(i_avg)
good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% words I (between)",
    "pct_i_within" = "% words I (within)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.35,0.35)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
      annotate("text", x = -0.3, y = 5.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.35, y = 5.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```
:::
::::

------------------------------------------------------------------------

#### Controlling for all the Words Frequency

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~  pct_i + pct_good + pct_bad  + i_MADS + daysSinceFirstText + (1|room_id), data = good_bad_data_small,control =
 lmerControl(optimizer ="bobyqa"))

i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I",
    "pct_good" = "% Words Good",
    "pct_bad" = "% Words Bad"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 5.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 5.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + pct_good_between + pct_good_within + pct_bad_between + pct_bad_within + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)

good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% Words I (between)",
    "pct_i_within" = "% Words I (within)",
    "pct_good_between" = "% Words Good (between)",
    "pct_good_within" = "% Words Good (within)",
    "pct_bad_between" = "% Words Bad (between)",
    "pct_bad_within" = "% Words Bad (within)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 9.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 9.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

#### Controlling for all the Words Frequency and Total words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~  pct_i + pct_good + pct_bad + n_total + i_MADS + daysSinceFirstText + (1|room_id), data = good_bad_data_small)

i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I",
    "pct_good" = "% Words Good",
    "pct_bad" = "% Words Bad",
    "n_total" = "# Total Words "
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
  annotate("text", x = -0.3, y = 6.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 6.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + pct_good_between + pct_good_within + pct_bad_between + pct_bad_within + n_total_within + n_total_between + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)


good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% Words I (between)",
    "pct_i_within" = "% Words I (within)",
    "pct_good_between" = "% Words Good (between)",
    "pct_good_within" = "% Words Good (within)",
    "pct_bad_between" = "% Words Bad (between)",
    "pct_bad_within" = "% Words Bad (within)",
    "pct_total_within" = "# Total Words (within)",
    "pct_total_between" = "# Total Words (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 11.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 11.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

### Sentiment and Emotion Words

No, all results hold when controlling for sentiment and emotion words

------------------------------------------------------------------------

#### Sentiment

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + tone_pos + tone_neg + daysSinceFirstText + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 4.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 4.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + tone_pos_within + tone_pos_between +  tone_neg_within + tone_neg_between + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)

good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.27)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.27, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.27, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

#### Emotion Words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + daysSinceFirstText + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 4.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 4.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)

good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.27)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.27, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.27, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

#### Sentiment AND Emotion Words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + tone_pos + tone_neg + daysSinceFirstText + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 6.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 6.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between +
                tone_pos_within + tone_pos_between + tone_neg_within + tone_neg_between + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)

good_bad_model |> 
  mutate(across(where(is.numeric), ~round(., 3))) |> 
  DT::datatable(rownames = FALSE, options = list(pageLength = 20))
good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.27)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.27, y = 11.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.27, y = 11.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

#### Sentiment, Emotion Words, and Total Word Count

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + tone_pos + tone_neg + daysSinceFirstText + n_total + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)",
    "n_total" = "# Total Words "
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between +
                tone_pos_within + tone_pos_between + tone_neg_within + tone_neg_between + n_total_within + n_total_between + (1|room_id), data = disaggregated_good_bad, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
good_bad_model <- extract_lmer_data(i_avg)

good_bad_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)",
    "n_total_within" = "# Total Words (within)",
    "n_total_between" = "# Total Words (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 13.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 13.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

## Able vs Unable

------------------------------------------------------------------------

### Word Frequency

No, all results hold when controlling for word frequency I. Between person effect   does not survive controlling for frequency of able and unable

------------------------------------------------------------------------

#### Controlling for Freq. of I

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~ pct_i + i_MADS + daysSinceFirstText + (1|room_id), data = able_unable_data_small)

i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)


i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.5, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.5, y = 3.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 3.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge

able_unable_model <- extract_lmer_data(i_avg)

able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% words I (between)",
    "pct_i_within" = "% words I (within)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.35,0.35)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.35, y = 5.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.35, y = 5.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 

```
:::
::::

------------------------------------------------------------------------

#### Controlling for all the Words Frequency

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~  pct_i + pct_able + pct_unable  + i_MADS + daysSinceFirstText + (1|room_id), data = able_unable_data_small,control =
 lmerControl(optimizer ="bobyqa"))


i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I",
    "pct_good" = "% Words Able",
    "pct_bad" = "% Words Unable"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
    annotate("text", x = -0.3, y = 5.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 5.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") 


```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + pct_able_between + pct_able_within + pct_unable_between + pct_unable_within + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)
able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% Words I (between)",
    "pct_i_within" = "% Words I (within)",
    "pct_able_between" = "% Words Able (between)",
    "pct_able_within" = "% Words Able (within)",
    "pct_unable_between" = "% Words Unable (between)",
    "pct_unable_within" = "% Words Unable (within)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed")  + 
  annotate("text", x = -0.3, y = 9.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 9.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

#### Controlling for all the Words Frequency and Total words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}

i_MADS_internalizing <- lmer(Internalizing ~  pct_i + pct_able + pct_unable + n_total + i_MADS + daysSinceFirstText + (1|room_id), data = able_unable_data_small)

i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "pct_i" = "% Words I",
    "pct_able" = "% Words Able",
    "pct_unable" = "% Words Unable",
    "n_total" = "# Total Words "
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.3, y = 5.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 5.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")


```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between + pct_i_between + pct_i_within + pct_able_between + pct_able_within + pct_unable_between + pct_unable_within + n_total_within + n_total_between + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)
able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "pct_i_between" = "% Words I (between)",
    "pct_i_within" = "% Words I (within)",
    "pct_able_between" = "% Words Able (between)",
    "pct_able_within" = "% Words Able (within)",
    "pct_unable_between" = "% Words Unable (between)",
    "pct_unable_within" = "% Words Unable (within)",
    "pct_total_within" = "# Total Words (within)",
    "pct_total_between" = "# Total Words (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
   annotate("text", x = -0.3, y =11.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.3, y = 11.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

### Sentiment and Emotion Words

No, all results hold when controlling for sentiment and emotion words.

------------------------------------------------------------------------

#### Sentiment

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + tone_pos + tone_neg + daysSinceFirstText + (1|room_id), data = able_unable_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
```

```{r fig.height=7, fig.width=10}
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.2)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.3, y = 4.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.2, y = 4.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + tone_pos_within + tone_pos_between +  tone_neg_within + tone_neg_between + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)


able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.27)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.27, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.27, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

#### Emotion Words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + daysSinceFirstText + (1|room_id), data = able_unable_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)

i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.2)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
   annotate("text", x = -0.3, y = 4.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.2, y = 4.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)

able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.27)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.27, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.27, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

#### Sentiment AND Emotion Words

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + tone_pos + tone_neg + daysSinceFirstText + (1|room_id), data = able_unable_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.2)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.3, y = 6.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.2, y = 6.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between +
                tone_pos_within + tone_pos_between + tone_neg_within + tone_neg_between + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)

able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.27,0.4)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.27, y = 11.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.4, y = 11.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

#### Sentiment, Emotion Words, and Total Word Count

:::: scrollable
::: panel-tabset
##### Non-disaggregated

```{r}
i_MADS_internalizing <- lmer(Internalizing ~  i_MADS + emo_pos + emo_neg + tone_pos + tone_neg + daysSinceFirstText + n_total + (1|room_id), data = good_bad_data_small)
i_MADS_internalizing <- extract_lmer_data(i_MADS_internalizing)
i_MADS_internalizing |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS" = "Mean Attribute\nDifference score",
    "emo_pos" = "Pos. Emotion Words (LIWC)",
    "emo_neg" = "Neg. Emotion Words (LIWC)",
    "tone_pos" = "Pos. Sentiment (LIWC)",
    "tone_neg" = "Neg. Sentiment (LIWC)",
    "n_total" = "# Total Words "
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = able_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3, 0.1)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.3, y = 7.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.1, y = 7.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```

##### Disaggregated

```{r}
i_avg <- lmer(Internalizing ~ daysSinceFirstText + i_MADS_within + i_MADS_between  + emo_pos_within + emo_pos_between + emo_neg_within + emo_neg_between +
                tone_pos_within + tone_pos_between + tone_neg_within + tone_neg_between + n_total_within + n_total_between + (1|room_id), data = disaggregated_able_unable, control =
 lmerControl(optimizer ="bobyqa")) # need to optimize to get it to converge
able_unable_model <- extract_lmer_data(i_avg)

able_unable_model |> 
  filter(term != "(Intercept)") |>
  mutate(term = recode(term,
    "daysSinceFirstText" = "Days in Therapy",
    "i_MADS_within" = "Mean Attribute\nDifference score (within)",
    "i_MADS_between" = "Mean Attribute\nDifference score (between)",
    "emo_pos_within" = "Pos. Emotion Words (LIWC) (within)",
    "emo_pos_between" = "Pos. Emotion Words (LIWC) (between)",
    "emo_neg_within" = "Neg. Emotion Words (LIWC) (within)",
    "emo_neg_between" = "Neg. Emotion Words (LIWC) (between)",
    "tone_pos_within" = "Pos. Sentiment (LIWC) (within)",
    "tone_pos_between" = "Pos. Sentiment (LIWC) (between)",
    "tone_neg_within" = "Neg. Sentiment (LIWC) (within)",
    "tone_neg_between" = "Neg. Sentiment (LIWC) (between)",
    "n_total_within" = "# Total Words (within)",
    "n_total_between" = "# Total Words (between)"
  )) |>
  ggplot(aes(x = estimate, y = factor(term), xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6),size = 1.1, linewidth = 1.5) +
  geom_text(aes(x = estimate, y = factor(term), label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") + 
  scale_color_manual(values = good_palette) +
  scale_alpha_manual(values = c(-0.5, 0.5), guide = FALSE) +
  plot_aes +
  labs(
    title = "Mean Attribute Difference score\nPredicting Internalizing Symptoms",
    x = "Standardized Coefficient Estimate ",
    y = NULL,
    color = "Predictor",
    caption = "Note: Error bars are 95% CIs."
  ) +
  scale_x_continuous(limits = c(-0.3,0.4)) +
  theme(
    axis.text.x = element_text(hjust = 1, size = 12),
    legend.text = element_text(size = 8),
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and style the title
  ) +
  geom_vline(xintercept = 0, linetype = "dashed") +
   annotate("text", x = -0.3, y = 11.25, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.4, y = 11.25, label = "More Sx →", hjust = 1, size = 5, fontface = "italic")

```
:::
::::

------------------------------------------------------------------------

# Q4) Is this occurring for all words, or is “I” unique in some way? {.tabset}

No, control words \*\* the, and, to, be, a, we \*\* do not uniformly move along these axes and/or they do not relate to symptoms.

```{r}
#| include: false
control_palette = (
  values = c(
    "The" = "#006d77",
    "And" = "#3a86ff",
    "To" = "#8338ec",
    "Be" = "#2ec4b6",
    "A" = "#8ecae6",
    "We" = "#f72585"
  )
)

df = read_csv('/Users/sm9518/Downloads/Talkspace_MADS_TEST_words.csv')

we_df = read_csv('/Users/sm9518/Downloads/Talkspace_MADS_We_words.csv')

we_df = we_df |> 
  dplyr::rename(room_id = 1) |> #rename the first column to the room_id
  filter(bin < 5) |> 
  select(1,2,bin,22:30)

df = df |> 
  dplyr::rename(room_id = 1) |> #rename the first column to the room_id
  filter(bin < 5) 

df = df |>
  left_join(we_df, by = c("room_id", "bin")) 

data_small <- df |> 
  mutate(
    the_MADS = the_good - the_bad,
    and_MADS = and_good - and_bad,
    to_MADS = to_good - to_bad,
    be_MADS = be_good - be_bad,
    a_MADS = a_good - a_bad,
    we_MADS = we_good - we_bad,
    our_MADS = ours_good - ours_bad,
    Internalizing = GAD + PHQ
  ) |> 
  rename(user_id = user_id.x)

#### create disaggregated data 
between <- data_small %>%
  gather(item, value,the_MADS,and_MADS,to_MADS,be_MADS,a_MADS,we_MADS,our_MADS) %>%
  select(user_id, item, value) %>%
  unique() %>%
  group_by(user_id, item) %>%
  summarize(mean = mean(value, na.rm = TRUE)) %>%
  mutate(item = sprintf("%s_between", item)) %>%
  group_by(item) %>%
  mutate(mean = scale(mean, center = TRUE, scale = TRUE)) %>%
  spread(item, mean)

# Within-person variation
within <- data_small %>%
  gather(item, value, the_MADS,and_MADS,to_MADS,be_MADS,a_MADS,we_MADS,our_MADS) %>%
  group_by(user_id, item) %>%
  mutate(value = scale(value, center = TRUE, scale = TRUE),
         item = sprintf("%s_within", item)) %>%
  spread(item, value)

# Combine both within-person and between-person variation
disaggregated <- within |> 
  left_join(between, by = "user_id") |> 
  select(1:10,12,Internalizing,the_MADS_between,and_MADS_between,
         to_MADS_between,be_MADS_between,a_MADS_between,we_MADS_between,
         our_MADS_between,we_MADS_between,we_MADS_within, the_MADS_within,
         and_MADS_within,to_MADS_within,be_MADS_within,a_MADS_within) 


### data plot 

data_plot = data_small |> 
  select(bin,daysSinceFirstText, user_id,the_MADS,and_MADS,to_MADS,be_MADS,a_MADS,we_MADS,our_MADS) |> 
  pivot_longer(cols = c(the_MADS,and_MADS,to_MADS,be_MADS,a_MADS), names_to = "word_attribute", values_to = "distance") 

data_sx = data_small |> 
  select(bin,daysSinceFirstText, user_id, PHQ, GAD,Internalizing) |> 
  pivot_longer(cols = PHQ:Internalizing, names_to = "Scale", values_to = "Scores") 

# Scale all the variables
data_small <- data_small %>%
  mutate(
    daysSinceFirstText = scale(daysSinceFirstText),
    Internalizing = scale(Internalizing),
    the_MADS = scale(the_MADS),
    and_MADS = scale(and_MADS),
    to_MADS = scale(to_MADS),
    be_MADS = scale(be_MADS),
    a_MADS = scale(a_MADS),
    we_MADS = scale(we_MADS),
    our_MADS = scale(our_MADS),
  )

disaggregated$Internalizing <- scale(disaggregated$Internalizing)
disaggregated$daysSinceFirstText <- scale(disaggregated$daysSinceFirstText)
```

------------------------------------------------------------------------

## Changes over Therapy

::: scrollable
```{r}
dv_list <- c("the_MADS", "and_MADS", "to_MADS", "be_MADS", "a_MADS", "we_MADS")


# Extract fixed effects for each DV
mads_coefs <- map_dfr(dv_list, function(dv) {
  model <- lmer(as.formula(paste0(dv, " ~ daysSinceFirstText + (1|room_id)")), data = data_small)
  broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE) |>
    filter(term == "daysSinceFirstText") |>
    mutate(term = "Days in Therapy", outcome = dv)
})

mads_coefs <- mads_coefs |>
  mutate(outcome = recode(outcome,
    "the_MADS" = "The",
    "and_MADS" = "And",
    "to_MADS" = "To",
    "be_MADS" = "Be",
    "a_MADS" = "A",
    "we_MADS" = "We"
  ))

max_y <- length(unique(mads_coefs$outcome)) + 0.5

mads_coefs |> 
ggplot(aes(x = estimate, y = factor(outcome),
                       xmin = conf.low, xmax = conf.high, color = outcome)) +
  geom_pointrange(position = position_dodge(width = 0.6), size = 1.1, linewidth = 1.5) +
  geom_text(aes(label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") +
  scale_color_manual(values = control_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  labs(
    title = "Do words move closer to Good or Bad?",
    subtitle = "Negative Coeff.= Moves closer to bad; Positive Coeff. = Moves closer to good",
    x = "Coefficient Estimate",
    y = NULL,
    color = "Word"
  ) +
  scale_x_continuous(limits = c(-0.2, 0.2)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.20, y = max_y, label = "← Bad", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.18, y = max_y, label = "Good →", hjust = 1, size = 5, fontface = "italic") +
  theme_minimal() +
  theme(
    legend.position = "none",
    legend.text = element_text(size = 12),
    text = element_text(size = 16, family = "Futura Medium"),
    axis.text = element_text(color = "black"),
    axis.ticks.y = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

```
:::

------------------------------------------------------------------------

## Track with Changes in Symptoms

::: scrollable
```{r}
dv_list <- c("the_MADS", "and_MADS", "to_MADS", "be_MADS", "a_MADS", "we_MADS")

mads_coefs <- map_dfr(dv_list, function(dv) {
  formula_str <- paste0("Internalizing ~ daysSinceFirstText + ", dv, " + (1|room_id)")
  model <- lmer(as.formula(formula_str), data = data_small)
  
  broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE) |>
    filter(term == dv)
})

mads_coefs <- mads_coefs |>
  mutate(term = recode(term,
    "the_MADS" = "The",
    "and_MADS" = "And",
    "to_MADS" = "To",
    "be_MADS" = "Be",
    "a_MADS" = "A",
    "we_MADS" = "We"
  ))

max_y <- length(unique(mads_coefs$estimate)) + 0.5

mads_coefs |> 
ggplot(aes(x = estimate, y = factor(term),
                       xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6), size = 1.1, linewidth = 1.5) +
  geom_text(aes(label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") +
  scale_color_manual(values = control_palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  labs(
    title = "Do words closer to good track with reduced sx",
    subtitle = "Negative Coeff.= Reduction in Sx; Positive Coeff. = Increase in Sx",
    x = "Coefficient Estimate",
    y = NULL,
    color = "Word"
  ) +
  scale_x_continuous(limits = c(-0.2, 0.2)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.2, y = max_y, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.18, y = max_y, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") +
  theme_minimal() +
  theme(
    legend.position = "none",
    legend.text = element_text(size = 12),
    text = element_text(size = 16, family = "Futura Medium"),
    axis.text = element_text(color = "black"),
    axis.ticks.y = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )
```
:::

------------------------------------------------------------------------

# Q5) Descriptive Approaches

## Story of I `DLATK` Analyses

---

## 1st Half of Treatment

Used median split for `daysSinceFirstText` to create two groups Median treatment time = `r median(df$daysSinceFirstText, na.rm = TRUE)` days.

---

```{r}
#| echo: FALSE
#| results: asis
#| warning: FALSE
#| message: FALSE
library(magick)
library(ggplot2)
library(tools)

folder_path <- "/Users/sm9518/Library/CloudStorage/Box-Box/Talkspace_ErikNook_HarvardPrinceton/Data/Processed/Mesquiti_LBA_2024/Talkspace-LBA/DLATK-output/early/1to5gram_I_output_tagcloud_wordclouds"
png_files <- list.files(folder_path, pattern = "(?i)\\.png$", full.names = TRUE)
png_files <- sort(png_files)

plots <- lapply(png_files, function(file) {
  slide_title <- file_path_sans_ext(basename(file))
  
  img <- image_read(file)
  p <- image_ggplot(img, interpolate = TRUE) + 
    ggtitle(slide_title) + 
    theme_minimal() +
 theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )  
  # Return a list with title + plot so you can print them separately
  list(title = slide_title, plot = p)
})

# Now print each slide with slide title and plot, plus slide break
for (slide in plots) {
  cat("## ", slide$title, "\n\n", sep = "")
  print(slide$plot)
  cat("\n\n---\n\n")
}

```

## 2nd Half of Treatment

---

```{r}
#| echo: FALSE
#| results: asis
#| warning: FALSE
#| message: FALSE
library(magick)
library(ggplot2)
library(tools)

folder_path <- "/Users/sm9518/Library/CloudStorage/Box-Box/Talkspace_ErikNook_HarvardPrinceton/Data/Processed/Mesquiti_LBA_2024/Talkspace-LBA/DLATK-output/late/1to5gram_I_output_tagcloud_wordclouds"
png_files <- list.files(folder_path, pattern = "(?i)\\.png$", full.names = TRUE)
png_files <- sort(png_files)

plots <- lapply(png_files, function(file) {
  slide_title <- file_path_sans_ext(basename(file))
  
  img <- image_read(file)
  p <- image_ggplot(img, interpolate = TRUE) + 
    ggtitle(slide_title) + 
    theme_minimal() +
 theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )  
  # Return a list with title + plot so you can print them separately
  list(title = slide_title, plot = p)
})

# Now print each slide with slide title and plot, plus slide break
for (slide in plots) {
  cat("## ", slide$title, "\n\n", sep = "")
  print(slide$plot)
  cat("\n\n---\n\n")
}


```


## Topic Modeling

Built topic model from all sentences in `Talksapace` data using `bertopic` from sentences that had the word I in them. \
Extracted the top 20 topics from the model

---

```{r}
library(ggwordcloud)

options(ggrepel.max.overlaps = 9999) # increase number of overlaps 

palette <- c(
  "#772e25", "#c44536", "#ee9b00", "#197278", "#283d3b", 
  "#9CC5A1", "#6195C6", "#ADA7C9", "#4D4861", "grey50",
  "#d4a373", "#8a5a44", "#4a6a74", "#5c80a8", "#a9c5a0",
  "#7b9b8e", "#e1b16a", "#a69b7c", "#9d94c4", "#665c54"
)

# Read data
df <- read_csv('/Users/sm9518/Library/CloudStorage/Box-Box/Talkspace_ErikNook_HarvardPrinceton/Data/Processed/Mesquiti_LBA_2024/Talkspace-LBA/I-representations/talkspace_-20-topic_words_frequencies.csv')


df <- df %>%
  mutate(
    x = runif(n()),  # random x position
    y = runif(n())   # random y position
  )
# Ensure Topic is factor
df$Topic <- as.factor(df$Topic)
df$Topic <- factor(paste0("Topic ", df$Topic))

# Unique topics
unique_topics <- unique(df$Topic)

# Split topics into groups of 4
topic_groups <- split(unique_topics, ceiling(seq_along(unique_topics) / 4))

# Plotting function for a group of topics
plot_topics <- function(topics) {
  df %>% 
    filter(Topic %in% topics) %>%
    ggplot(aes(label = Word, size = Frequency, color = Topic)) +
    geom_text_wordcloud_area(
      rm_outside = TRUE,
      family = "Futura Medium",
      fontface = "bold"
    ) +
    scale_size(range = c(6, 12)) +
    scale_color_manual(values = sample(palette, 4)) + 
    facet_wrap(~ Topic, scales = "free", ncol = 2) +
    ggtitle(
      label = paste("Top Words in Topics:", paste(topics, collapse = ", ")),
      subtitle = "Word size denotes importance (frequency or weight) in the topic"
    ) +
    theme_minimal(base_family = "Futura Medium") +
    theme(
      plot.title = element_text(face = "bold", size = 18, hjust = 0.5, margin = margin(b = 5)),
      plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 10)),
      strip.text = element_text(face = "bold", size = 14, margin = margin(t = 8, b = 8)),
      panel.spacing = unit(1, "lines"),
      plot.margin = margin(20, 20, 20, 20),
      panel.background = element_rect(fill = "#f9f9f9", color = NA)
    )
}

# Generate list of plots for each group of 4 topics
plots_list <- purrr::map(topic_groups, plot_topics)
```


``` {r}
#| echo: FALSE
#| results: asis
#| warning: FALSE
#| message: FALSE
for (i in seq_along(plots_list)) {
  
  cat("## Topic Group", i, "\n\n")  # Slide title
  cat("\n\n")  # New slide (required by Quarto/revealjs)
  print(plots_list[[i]])  # Render the plot
  cat("\n\n---\n\n")
}

```

# Supplemental Analyses 

----

## Examining other pairs 

Looking at happy-sad, calm-anxious, can-cannot.

```{r}
df = read.csv('/Users/sm9518/Downloads/Talkspace_MADS_exp.csv')


df = df |> 
  #dplyr::rename(room_id = 1) |> #rename the first column to the room_id
  filter(bin < 5)

data_small <- df |> 
  mutate(
    happy_MADS = i_happy - i_sad,
    calm_MADS = i_calm - i_anxious,
    can_MADS = i_can - i_cannot,
    Internalizing = GAD + PHQ
  ) |> 
  filter(
  !is.na(daysSinceFirstText) & 
  daysSinceFirstText >= 7 & # at least 1 week of texts &
  n_total >= 25 & 
  !is.na(happy_MADS) & !is.na(calm_MADS) & !is.na(can_MADS) &
  n_i > 0 
) 

#### create disaggregated data 
between <- data_small %>%
  gather(item, value,happy_MADS,calm_MADS,can_MADS, pct_i,pct_happy,pct_sad,emo_pos,emo_neg,tone_pos,tone_neg,n_total) %>%
  select(user_id, item, value) %>%
  unique() %>%
  group_by(user_id, item) %>%
  summarize(mean = mean(value, na.rm = TRUE)) %>%
  mutate(item = sprintf("%s_between", item)) %>%
  group_by(item) %>%
  mutate(mean = scale(mean, center = TRUE, scale = TRUE)) %>%
  spread(item, mean)

# Within-person variation
within <- data_small %>%
  gather(item, value, happy_MADS,calm_MADS,can_MADS,pct_i,pct_happy,pct_sad,emo_pos,emo_neg,tone_pos,tone_neg,n_total) %>%
  group_by(user_id, item) %>%
  mutate(value = scale(value, center = TRUE, scale = TRUE),
         item = sprintf("%s_within", item)) %>%
  spread(item, value)

# Combine both within-person and between-person variation
disaggregated <- within |> 
  left_join(between, by = "user_id") |> 
  select(1:10,12,daysSinceFirstText,
         Internalizing,
         happy_MADS_within,calm_MADS_within,can_MADS_within,
         happy_MADS_between,calm_MADS_between,can_MADS_between,
         n_total_within,n_total_between,
         pct_i_within,pct_i_between,pct_happy_within,pct_happy_between,
         pct_sad_within,pct_sad_between,
         emo_pos_within,emo_pos_between,
         emo_neg_within,emo_neg_between,
         tone_pos_within,tone_pos_between,
         tone_neg_within,tone_neg_between) 


### data plot 

data_plot = data_small |> 
  select(bin,daysSinceFirstText, user_id,calm_MADS,happy_MADS,can_MADS ) |> 
  pivot_longer(cols = c("calm_MADS","happy_MADS","can_MADS"), names_to = "word_attribute", values_to = "distance") 

data_sx = data_small |> 
  select(bin,daysSinceFirstText, user_id, PHQ, GAD,Internalizing) |> 
  pivot_longer(cols = PHQ:Internalizing, names_to = "Scale", values_to = "Scores") 

# Scale all the variables
data_small <- data_small %>%
  mutate(
    daysSinceFirstText = scale(daysSinceFirstText),
    Internalizing = scale(Internalizing),
    n_i = scale(n_i),
    n_happy = scale(n_happy),
    n_sad = scale(n_sad),
    happy_MADS = scale(happy_MADS),
    calm_MADS = scale(calm_MADS),
    can_MADS = scale(can_MADS),
    pct_i = scale(pct_i),
    pct_happy = scale(pct_happy),
    pct_sad = scale(pct_sad),
    n_total = scale(n_total),
    tone_pos = scale(tone_pos),
    tone_neg = scale(tone_neg),
    emo_pos = scale(emo_pos),
    emo_neg = scale(emo_neg)
  )

disaggregated$Internalizing <- scale(disaggregated$Internalizing)
disaggregated$daysSinceFirstText <- scale(disaggregated$daysSinceFirstText)

palette <- c(
  "#7a7a7a", "#5c5470", "#c3b5d7", "#7baedc", "#a8d5ba",
  "#3a4d4b", "#1f5f63", "#f2a541", "#d95c4b", "#6b2f2b"
)

```

## Changes over Therapy

::: scrollable
```{r}
dv_list <- c("calm_MADS","happy_MADS","can_MADS")


# Extract fixed effects for each DV
mads_coefs <- map_dfr(dv_list, function(dv) {
  model <- lmer(as.formula(paste0(dv, " ~ daysSinceFirstText + (1|room_id)")), data = data_small)
  broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE) |>
    filter(term == "daysSinceFirstText") |>
    mutate(term = "Days in Therapy", outcome = dv)
})

mads_coefs <- mads_coefs |>
  mutate(outcome = recode(outcome,
  "calm_MADS" = "calm-anxious",
  "happy_MADS" = "happy-sad",
  "can_MADS" = "can-cannot"
  ))

max_y <- length(unique(mads_coefs$outcome)) + 0.5

mads_coefs |> 
ggplot(aes(x = estimate, y = factor(outcome),
                       xmin = conf.low, xmax = conf.high, color = outcome)) +
  geom_pointrange(position = position_dodge(width = 0.6), size = 1.1, linewidth = 1.5) +
  geom_text(aes(label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") +
  scale_color_manual(values = palette) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  labs(
    title = "Do words move closer to Pos. or Neg?",
    subtitle = "Negative Coeff.= Moves closer to Neg. Word; Positive Coeff. = Moves closer to Pos. Word",
    x = "Coefficient Estimate",
    y = NULL,
    color = "Word"
  ) +
  scale_x_continuous(limits = c(-0.2, 0.2)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.20, y = max_y, label = "← Bad", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.18, y = max_y, label = "Good →", hjust = 1, size = 5, fontface = "italic") +
  theme_minimal() +
  theme(
    legend.position = "none",
    legend.text = element_text(size = 12),
    text = element_text(size = 16, family = "Futura Medium"),
    axis.text = element_text(color = "black"),
    axis.ticks.y = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

```
:::

------------------------------------------------------------------------

## Track with Changes in Symptoms

All models control for time in tx and are specified separately for each word.

::: scrollable
::: panel-tabset

### Non-disaggregated

```{r}
dv_list <- c("calm_MADS","happy_MADS","can_MADS")
mads_coefs <- map_dfr(dv_list, function(dv) {
  formula_str <- paste0("Internalizing ~ daysSinceFirstText + ", dv, " + (1|room_id)")
  model <- lmer(as.formula(formula_str), data = data_small)
  
  broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE) |>
    filter(term == dv) 
})

mads_coefs <- mads_coefs |>
  mutate(term = recode(term,
  "calm_MADS" = "calm-anxious",
  "happy_MADS" = "happy-sad",
  "can_MADS" = "can-cannot"
  )  ) 


max_y <- length(unique(mads_coefs$estimate)) + 0.5

mads_coefs |> 
ggplot(aes(x = estimate, y = factor(term),
                       xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6), size = 1.1, linewidth = 1.5) +
  geom_text(aes(label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") +
  scale_color_manual(values = palette_condition) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  labs(
    title = "Do words closer to good track with reduced sx (Controling for Time in Therapy)",
    subtitle = "Negative Coeff.= Reduction in Sx; Positive Coeff. = Increase in Sx",
    x = "Coefficient Estimate",
    y = NULL,
    color = "Word"
  ) +
  scale_x_continuous(limits = c(-0.3, 0.3)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.2, y = max_y, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.18, y = max_y, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") +
  theme_minimal() +
  theme(
    legend.position = "none",
    legend.text = element_text(size = 12),
    text = element_text(size = 16, family = "Futura Medium"),
    axis.text = element_text(color = "black"),
    axis.ticks.y = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )
```

### Disaggregated

```{r}
dv_list <- c("calm_MADS","happy_MADS","can_MADS")
mads_coefs <- map_dfr(dv_list, function(dv) {
  formula_str <- paste0(
    "Internalizing ~ daysSinceFirstText + ",
    dv, "_within + ",
    dv, "_between + (1|room_id)"
  )
  
  model <- lmer(as.formula(formula_str), data = disaggregated)
  broom.mixed::tidy(model, effects = "fixed", conf.int = TRUE) |>
    filter(term %in% c(paste0(dv, "_within"), paste0(dv, "_between")))
})

mads_coefs <- mads_coefs |>
  mutate(term = recode(term,
  "calm_MADS_within" = "calm-anxious (within)",
  "calm_MADS_between" = "calm-anxious (between)",
  "happy_MADS_within" = "happy-sad (within)",
  "happy_MADS_between" = "happy-sad (between)",
  "can_MADS_within" = "can-cannot (within)",
  "can_MADS_between" = "can-cannot (between)"
  ))

max_y <- length(unique(mads_coefs$estimate)) + 0.5

mads_coefs |> 
ggplot(aes(x = estimate, y = factor(term),
                       xmin = conf.low, xmax = conf.high, color = term)) +
  geom_pointrange(position = position_dodge(width = 0.6), size = 1.1, linewidth = 1.5) +
  geom_text(aes(label = case_when(
    p.value < 0.001 ~ "***",
    p.value < 0.01 ~ "**",
    p.value < 0.05 ~ "*",
    TRUE ~ ""
  )),
  position = position_dodge(width = 0.7),
  hjust = 0.5,
  vjust = 0.01,
  size = 6,
  color = "black") +
  scale_color_manual(values = palette_condition) +
  scale_alpha_manual(values = c(0.1, 1), guide = FALSE) +
  labs(
    title = "Do words closer to good track with reduced sx (Controling for Time in Therapy)",
    subtitle = "Negative Coeff.= Reduction in Sx; Positive Coeff. = Increase in Sx",
    x = "Coefficient Estimate",
    y = NULL,
    color = "Word"
  ) +
  scale_x_continuous(limits = c(-0.3, 0.3)) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate("text", x = -0.2, y = max_y, label = "← Fewer Sx", hjust = 0, size = 5, fontface = "italic") +
  annotate("text", x =  0.18, y = max_y, label = "More Sx →", hjust = 1, size = 5, fontface = "italic") +
  theme_minimal() +
  theme(
    legend.position = "none",
    legend.text = element_text(size = 12),
    text = element_text(size = 16, family = "Futura Medium"),
    axis.text = element_text(color = "black"),
    axis.ticks.y = element_blank(),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

```

:::
:::